<!DOCTYPE html>
<html lang="ro">
<head>
  <meta charset="UTF-8" />
  <title>Jurnal de Călătorii</title>
  <style>
    html, body {
      margin: 0; padding: 0; height: 100%;
      font-family: 'Segoe UI', sans-serif;
      color: #333;
      text-align: left;
      background: url('media/album1/Balea-Lac-scaled-1-2048x1072.jpg') no-repeat center center fixed;
      background-size: cover;
      position: relative;
      overflow-x: hidden;
    }

    /* Stele animate fundal */
    .stars {
      position: fixed;
      top: 0; left: 0;
      width: 100%;
      height: 100%;
      background: transparent;
      z-index: 4;
      pointer-events: none;
      overflow: hidden;
    }

    .stars::before, .stars::after {
      content: "";
      position: absolute;
      width: 200%;
      height: 200%;
      background: radial-gradient(white 1px, transparent 1px);
      background-size: 50px 50px;
      animation: moveStars 60s linear infinite;
      opacity: 0.3;
    }

    .stars::after {
      background-size: 80px 80px;
      animation-duration: 900s;
      opacity: 0.2;
    }

    @keyframes moveStars {
      0% { transform: translate(0, 0); }
      100% { transform: translate(-500px, -500px); }
    }

    .overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      background-color: rgba(0, 0, 0, 0.3);
      z-index: 5;
      pointer-events: none;
    }

    .gif-container {
      position: fixed;
      top: 20px;
      left: 20px;
      width: 160px;
      height: 160px;
      border: 4px solid #007BFF;
      border-radius: 15px;
      background: rgba(255, 255, 255, 0.15);
      box-shadow: 0 0 15px #007BFFaa;
      display: flex;
      justify-content: center;
      align-items: center;
      animation: pulse 2.5s infinite ease-in-out;
      z-index: 1000;
      overflow: hidden;
    }

    @keyframes pulse {
      0%, 100% {
        box-shadow: 0 0 15px #007BFFaa;
        transform: scale(1);
      }
      50% {
        box-shadow: 0 0 25px #007BFFdd;
        transform: scale(1.05);
      }
    }

    .gif-container img {
      max-width: 100%;
      max-height: 100%;
      border-radius: 12px;
      user-select: none;
      pointer-events: none;
    }

    header {
      padding: 40px 20px;
      color: white;
      text-shadow: 0 0 5px rgba(0,0,0,0.7);
      position: relative;
      z-index: 10;
      text-align: center;
    }

    .buttons-container {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      gap: 15px;
      margin: 40px 0 40px 40px;
      position: relative;
      z-index: 10;
      max-width: 200px;
    }

    .album-button {
      padding: 15px 25px;
      background: #007BFF;
      border: 2px solid #0056b3;
      border-radius: 10px;
      text-decoration: none;
      color: white;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s, color 0.3s;
      display: inline-block;
      box-shadow: 0 4px 6px rgba(0, 91, 187, 0.4);
      user-select: none;
      width: 100%;
      box-sizing: border-box;
      text-align: center;
    }

    .album-button:hover {
      background-color: #0056b3;
      color: #ffdd57;
      box-shadow: 0 6px 8px rgba(255, 221, 87, 0.6);
    }

    footer {
      padding: 15px;
      color: white;
      text-shadow: 0 0 5px rgba(0,0,0,0.7);
      position: relative;
      z-index: 10;
      text-align: center;
    }

    @keyframes rotateAnimation {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }

    .rotate {
      animation: rotateAnimation 1s linear;
    }

    #clockCanvas {
      position: fixed;
      top: 20px;
      right: 20px;
      width: 180px;
      height: 180px;
      background: rgba(0, 123, 255, 0.85);
      border-radius: 50%;
      box-shadow: 0 0 12px rgba(0, 123, 255, 0.8);
      z-index: 1000;
      user-select: none;
    }

    #dateBox {
      position: fixed;
      top: 210px;
      right: 45px;
      width: 130px;
      height: 45px;
      background: rgba(0, 123, 255, 0.85);
      color: white;
      font-weight: bold;
      font-size: 18px;
      line-height: 50px;
      border-radius: 10px;
      box-shadow: 0 0 12px rgba(0, 123, 255, 0.8);
      text-align: center;
      user-select: none;
      z-index: 1000;
      font-family: 'Segoe UI', sans-serif;
    }
  </style>
</head>
<body>

  <div class="stars"></div>

  <div class="overlay"></div>

  <div class="gif-container">
    <img src="media/album1/typix-good-vibe.gif" alt="GIF animat" />
  </div>

  <header>
    <h1>Bine ai venit în călătoriile noastre!</h1>
    <p>Pe aici ''umblăm'' noi:</p>
  </header>

  <canvas id="clockCanvas" width="140" height="140"></canvas>

  <div id="dateBox"></div>

  <main class="buttons-container">
    <a href="album1.html" class="album-button">Prima noastra iesire..</a>
    <a href="album2.html" class="album-button">Am prins curaj</a>
    <a href="album3.html" class="album-button">Nu este asa inalt..</a>
    <a href="album4.html" class="album-button">Totul verde si...rosu</a>
    <a href="album5.html" class="album-button">Natura si..noi</a>
  </main>

  <footer>
    <p>© 2025 Jurnalul nostru cu amintiri R&A </p>
  </footer>

<script>
  // Butoane animatie rotatie
  const buttons = document.querySelectorAll('.album-button');
  buttons.forEach(button => {
    button.addEventListener('click', function(event) {
      event.preventDefault();
      if(this.classList.contains('rotate')) return;
      this.classList.add('rotate');
      setTimeout(() => {
        window.location.href = this.href;
      }, 1000);
    });
  });

  // Ceas analog
  const canvas = document.getElementById('clockCanvas');
  const ctx = canvas.getContext('2d');
  const radius = canvas.height / 2;
  ctx.translate(radius, radius);
  const clockRadius = radius * 0.90;

  function drawClock() {
    drawFace(ctx, clockRadius);
    drawNumbers(ctx, clockRadius);
    drawTime(ctx, clockRadius);
  }

  function drawFace(ctx, radius) {
    ctx.beginPath();
    ctx.arc(0, 0, radius, 0, 2 * Math.PI);
    ctx.fillStyle = 'white';
    ctx.fill();

    ctx.lineWidth = radius * 0.05;
    ctx.strokeStyle = '#007BFF';
    ctx.stroke();

    ctx.beginPath();
    ctx.arc(0, 0, radius * 0.07, 0, 2 * Math.PI);
    ctx.fillStyle = '#007BFF';
    ctx.fill();
  }

  function drawNumbers(ctx, radius) {
    ctx.font = radius * 0.15 + "px Arial";
    ctx.fillStyle = '#007BFF';
    ctx.textBaseline = "middle";
    ctx.textAlign = "center";
    for(let num = 1; num <= 12; num++) {
      let ang = num * Math.PI / 6;
      ctx.rotate(ang);
      ctx.translate(0, -radius * 0.85);
      ctx.rotate(-ang);
      ctx.fillText(num.toString(), 0, 0);
      ctx.rotate(ang);
      ctx.translate(0, radius * 0.85);
      ctx.rotate(-ang);
    }
  }

  function drawHand(ctx, pos, length, width, color) {
    ctx.beginPath();
    ctx.lineWidth = width;
    ctx.lineCap = "round";
    ctx.strokeStyle = color;
    ctx.moveTo(0,0);
    ctx.rotate(pos);
    ctx.lineTo(0, -length);
    ctx.stroke();
    ctx.rotate(-pos);
  }

  function drawTime(ctx, radius) {
    const now = new Date();
    let hour = now.getHours();
    let minute = now.getMinutes();
    let second = now.getSeconds();

    hour = hour % 12;
    hour = (hour * Math.PI / 6) +
           (minute * Math.PI / (6 * 60)) +
           (second * Math.PI / (360 * 60));
    drawHand(ctx, hour, radius * 0.5, radius * 0.07, '#0056b3');

    let minutePos = (minute * Math.PI / 30) + (second * Math.PI / (30 * 60));
    drawHand(ctx, minutePos, radius * 0.75, radius * 0.05, '#007BFF');

    let secondPos = second * Math.PI / 30;
    drawHand(ctx, secondPos, radius * 0.85, radius * 0.02, '#ffdd57');
  }

  function updateClock() {
    ctx.clearRect(-radius, -radius, canvas.width, canvas.height);
    drawClock();
  }

  setInterval(updateClock, 1000);
  updateClock();

  // Actualizare data în casetă
  function updateDate() {
    const dateBox = document.getElementById('dateBox');
    const now = new Date();
    let day = now.getDate();
    let month = now.getMonth() + 1;
    let year = now.getFullYear();

    if(day < 10) day = '0' + day;
    if(month < 10) month = '0' + month;

    dateBox.textContent = `${day}/${month}/${year}`;
  }

  updateDate();

</script>

</body>
</html>
